// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/addons": {
            "get": {
                "description": "List all addons.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "List all addons.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Addon"
                            }
                        }
                    }
                }
            }
        },
        "/addons/:name/tasks": {
            "post": {
                "description": "Create an addon task.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create"
                ],
                "summary": "Create an addon task.",
                "parameters": [
                    {
                        "description": "Task data",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Task"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Task"
                        }
                    }
                }
            }
        },
        "/addons/{name}": {
            "get": {
                "description": "Get an addon by name.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get an addon by name.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Addon name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Addon"
                        }
                    }
                }
            }
        },
        "/application-inventory/application": {
            "get": {
                "description": "List all applications.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "list"
                ],
                "summary": "List all applications.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Application"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create an application.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create"
                ],
                "summary": "Create an application.",
                "parameters": [
                    {
                        "description": "Application data",
                        "name": "application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Application"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Application"
                        }
                    }
                }
            }
        },
        "/application-inventory/application-import": {
            "get": {
                "description": "List imports.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "list"
                ],
                "summary": "List imports.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Import"
                            }
                        }
                    }
                }
            }
        },
        "/application-inventory/application-import/{id}": {
            "get": {
                "description": "Get an import by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get an import by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Import ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Import"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an import. This leaves any created application or dependency.",
                "tags": [
                    "delete"
                ],
                "summary": "Delete an import.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Import ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/application-inventory/application/{id}": {
            "get": {
                "description": "Get an application by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get an application by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Application"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an application.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "update"
                ],
                "summary": "Update an application.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Application id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Application data",
                        "name": "application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Application"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "description": "Delete an application.",
                "tags": [
                    "delete"
                ],
                "summary": "Delete an application.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Application id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/application-inventory/application/{id}/bucket": {
            "get": {
                "description": "List all buckets.",
                "produces": [
                    "application/json"
                ],
                "summary": "List all buckets.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Bucket"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a bucket for an application.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a bucket for an application.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Bucket data",
                        "name": "bucket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Bucket"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Bucket"
                        }
                    }
                }
            }
        },
        "/application-inventory/application/{id}/identities": {
            "get": {
                "description": "List identities for an application.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "List identities for an application.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Identity"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create an identity for an application.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create"
                ],
                "summary": "Create an identity for an application.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Identity data",
                        "name": "identity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Identity"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Identity"
                        }
                    }
                }
            }
        },
        "/application-inventory/application/{id}/repositories": {
            "get": {
                "description": "List all repositories that belong to an application.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "List all repositories that belong to an application.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Repository"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a repository for an application.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create"
                ],
                "summary": "Create a repository for an application.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Repository data",
                        "name": "repo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Repository"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Repository"
                        }
                    }
                }
            }
        },
        "/application-inventory/applications-dependency": {
            "get": {
                "description": "List all dependencies.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "list"
                ],
                "summary": "List all dependencies.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Dependency"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a dependency.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create"
                ],
                "summary": "Create a dependency.",
                "parameters": [
                    {
                        "description": "Dependency data",
                        "name": "applications_dependency",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Dependency"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Dependency"
                        }
                    }
                }
            }
        },
        "/application-inventory/applications-dependency/{id}": {
            "get": {
                "description": "Get a dependency by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get a dependency by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dependency ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Dependency"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a dependency.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "delete"
                ],
                "summary": "Delete a dependency.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dependency id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/application-inventory/csv-export": {
            "get": {
                "description": "Export the source CSV for a particular import summary.",
                "produces": [
                    "text/csv"
                ],
                "tags": [
                    "export"
                ],
                "summary": "Export the source CSV for a particular import summary.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ImportSummary ID",
                        "name": "importSummary.id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/application-inventory/file/upload": {
            "post": {
                "description": "Upload a CSV containing applications and dependencies to import.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "post"
                ],
                "summary": "Upload a CSV containing applications and dependencies to import.",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.ImportSummary"
                        }
                    }
                }
            }
        },
        "/application-inventory/import-summary": {
            "get": {
                "description": "List import summaries.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "list"
                ],
                "summary": "List import summaries.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ImportSummary"
                            }
                        }
                    }
                }
            }
        },
        "/application-inventory/import-summary/{id}": {
            "get": {
                "description": "Get an import by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get an import summary by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ImportSummary ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ImportSummary"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an import summary and associated import records.",
                "tags": [
                    "delete"
                ],
                "summary": "Delete an import summary and associated import records.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ImportSummary ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/application-inventory/review": {
            "get": {
                "description": "List all reviews.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "List all reviews.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Review"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a review.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create"
                ],
                "summary": "Create a review.",
                "parameters": [
                    {
                        "description": "Review data",
                        "name": "review",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Review"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Review"
                        }
                    }
                }
            }
        },
        "/application-inventory/review/bulk": {
            "post": {
                "description": "Copy a review from one application to others.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "copy"
                ],
                "summary": "Copy a review from one application to others.",
                "parameters": [
                    {
                        "description": "Review copy request data",
                        "name": "copy_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CopyRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/application-inventory/review/{id}": {
            "get": {
                "description": "Get a review by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get a review by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Review ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Review"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update a review.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "update"
                ],
                "summary": "Update a review.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Review ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Review data",
                        "name": "review",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Review"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "description": "Delete a review.",
                "tags": [
                    "delete"
                ],
                "summary": "Delete a review.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Review ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/controls/bucket": {
            "get": {
                "description": "List all buckets.",
                "produces": [
                    "application/json"
                ],
                "summary": "List all buckets.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Bucket"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a bucket.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a bucket.",
                "parameters": [
                    {
                        "description": "Bucket data",
                        "name": "bucket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Bucket"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Bucket"
                        }
                    }
                }
            }
        },
        "/controls/bucket/{id}": {
            "get": {
                "description": "Get a bucket by ID.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a bucket by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Bucket"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a bucket.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a bucket.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Bucket data",
                        "name": "bucket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Bucket"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api.Bucket"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a bucket.",
                "summary": "Delete a bucket.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api.Bucket"
                        }
                    }
                }
            }
        },
        "/controls/business-service": {
            "get": {
                "description": "List all business services.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "list"
                ],
                "summary": "List all business services.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessService"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a business service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create"
                ],
                "summary": "Create a business service.",
                "parameters": [
                    {
                        "description": "Business service data",
                        "name": "business_service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.BusinessService"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessService"
                        }
                    }
                }
            }
        },
        "/controls/business-service/{id}": {
            "get": {
                "description": "Get a business service by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get a business service by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Business Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessService"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a business service.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "update"
                ],
                "summary": "Update a business service.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Business service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Business service data",
                        "name": "business_service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.BusinessService"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "description": "Delete a business service.",
                "tags": [
                    "delete"
                ],
                "summary": "Delete a business service.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Business service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/controls/job-function": {
            "get": {
                "description": "List all job functions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "List all job functions.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.JobFunction"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a job function.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create"
                ],
                "summary": "Create a job function.",
                "parameters": [
                    {
                        "description": "Job Function data",
                        "name": "job_function",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.JobFunction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.JobFunction"
                        }
                    }
                }
            }
        },
        "/controls/job-function/{id}": {
            "get": {
                "description": "Get a job function by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get a job function by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Function ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.JobFunction"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update a job function.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "update"
                ],
                "summary": "Update a job function.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Function ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Job Function data",
                        "name": "job_function",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.JobFunction"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "description": "Delete a job function.",
                "tags": [
                    "delete"
                ],
                "summary": "Delete a job function.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Function ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/controls/stakeholder": {
            "get": {
                "description": "List all stakeholders.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "List all stakeholders.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Stakeholder"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a stakeholder.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create"
                ],
                "summary": "Create a stakeholder.",
                "parameters": [
                    {
                        "description": "Stakeholder data",
                        "name": "stakeholder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Stakeholder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Stakeholder"
                        }
                    }
                }
            }
        },
        "/controls/stakeholder-group": {
            "get": {
                "description": "List all stakeholder groups.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "List all stakeholder groups.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.StakeholderGroup"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a stakeholder group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create"
                ],
                "summary": "Create a stakeholder group.",
                "parameters": [
                    {
                        "description": "Stakeholder Group data",
                        "name": "stakeholder_group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.StakeholderGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.StakeholderGroup"
                        }
                    }
                }
            }
        },
        "/controls/stakeholder-group/{id}": {
            "get": {
                "description": "Get a stakeholder group by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get a stakeholder group by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stakeholder Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.StakeholderGroup"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a stakeholder group.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "update"
                ],
                "summary": "Update a stakeholder group.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stakeholder Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Stakeholder Group data",
                        "name": "stakeholder_group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.StakeholderGroup"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "description": "Delete a stakeholder group.",
                "tags": [
                    "delete"
                ],
                "summary": "Delete a stakeholder group.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stakeholder Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/controls/stakeholder/{id}": {
            "get": {
                "description": "Get a stakeholder by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get a stakeholder by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stakeholder ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Stakeholder"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a stakeholder.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "update"
                ],
                "summary": "Update a stakeholder.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stakeholder ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Stakeholder data",
                        "name": "stakeholder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Stakeholder"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "description": "Delete a stakeholder.",
                "tags": [
                    "delete"
                ],
                "summary": "Delete a stakeholder.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stakeholder ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/controls/tag": {
            "get": {
                "description": "List all tags.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "List all tags.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Tag"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a tag.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create"
                ],
                "summary": "Create a tag.",
                "parameters": [
                    {
                        "description": "Tag data",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Tag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Tag"
                        }
                    }
                }
            }
        },
        "/controls/tag-type": {
            "get": {
                "description": "List all tag types.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "List all tag types.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.TagType"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a tag type.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create"
                ],
                "summary": "Create a tag type.",
                "parameters": [
                    {
                        "description": "Tag Type data",
                        "name": "tag_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TagType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.TagType"
                        }
                    }
                }
            }
        },
        "/controls/tag-type/{id}": {
            "get": {
                "description": "Get a tag type by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get a tag type by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag Type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.TagType"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a tag type.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "update"
                ],
                "summary": "Update a tag type.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag Type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tag Type data",
                        "name": "tag_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TagType"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "description": "Delete a tag type.",
                "tags": [
                    "delete"
                ],
                "summary": "Delete a tag type.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag Type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/controls/tag/{id}": {
            "get": {
                "description": "Get a tag by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get a tag by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Tag"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a tag.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "update"
                ],
                "summary": "Update a tag.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tag data",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Tag"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "description": "Delete a tag.",
                "tags": [
                    "delete"
                ],
                "summary": "Delete a tag.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/identities": {
            "get": {
                "description": "List all identities.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "List all identities.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Identity"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create an identity.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create"
                ],
                "summary": "Create an identity.",
                "parameters": [
                    {
                        "description": "Identity data",
                        "name": "identity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Identity"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Identity"
                        }
                    }
                }
            }
        },
        "/identities/{id}": {
            "get": {
                "description": "Get an identity by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get an identity by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Identity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Identity"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an identity.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "update"
                ],
                "summary": "Update an identity.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Identity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Identity data",
                        "name": "identity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Identity"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "description": "Delete an identity.",
                "tags": [
                    "delete"
                ],
                "summary": "Delete an identity.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Identity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/proxies": {
            "get": {
                "description": "List all proxies.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "List all proxies.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Proxy"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create an proxy.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create"
                ],
                "summary": "Create an proxy.",
                "parameters": [
                    {
                        "description": "Proxy data",
                        "name": "proxy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Proxy"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Proxy"
                        }
                    }
                }
            }
        },
        "/proxies/{id}": {
            "get": {
                "description": "Get an proxy by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get an proxy by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Proxy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Proxy"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an proxy.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "update"
                ],
                "summary": "Update an proxy.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Proxy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Proxy data",
                        "name": "proxy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Proxy"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "description": "Delete an proxy.",
                "tags": [
                    "delete"
                ],
                "summary": "Delete an proxy.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Proxy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/repositories": {
            "get": {
                "description": "List all repositories.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "List all repositories.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Repository"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a repository.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create"
                ],
                "summary": "Create a repository.",
                "parameters": [
                    {
                        "description": "Repository data",
                        "name": "repo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Repository"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Repository"
                        }
                    }
                }
            }
        },
        "/repositories/{id}": {
            "get": {
                "description": "Get a repository by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get a repository by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Repository"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a repository.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "update"
                ],
                "summary": "Update a repository.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Repository data",
                        "name": "repo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Repository"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "description": "Delete a repository.",
                "tags": [
                    "delete"
                ],
                "summary": "Delete a repository.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "description": "List all tasks.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "List all tasks.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Task"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a task.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create"
                ],
                "summary": "Create a task.",
                "parameters": [
                    {
                        "description": "Task data",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Task"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Task"
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "get": {
                "description": "Get a task by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get a task by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Task"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a task.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "update"
                ],
                "summary": "Update a task.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task data",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Task"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "description": "Delete a task.",
                "tags": [
                    "delete"
                ],
                "summary": "Delete a task.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/tasks/{id}/report": {
            "put": {
                "description": "Update a task report.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "update"
                ],
                "summary": "Update a task report.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TaskReport ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "TaskReport data",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TaskReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.TaskReport"
                        }
                    }
                }
            },
            "post": {
                "description": "Update a task report.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "update"
                ],
                "summary": "Create a task report.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TaskReport ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "TaskReport data",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TaskReport"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.TaskReport"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Addon": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.Application": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "businessService": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "review": {
                    "$ref": "#/definitions/api.Review"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.Bucket": {
            "type": "object",
            "properties": {
                "application": {
                    "type": "integer"
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.BusinessService": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "object",
                    "properties": {
                        "displayName": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer"
                        }
                    }
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.CopyRequest": {
            "type": "object",
            "required": [
                "sourceReview",
                "targetApplications"
            ],
            "properties": {
                "sourceReview": {
                    "type": "integer"
                },
                "targetApplications": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "api.Dependency": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "from": {
                    "type": "object",
                    "required": [
                        "id"
                    ],
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "id": {
                    "type": "integer"
                },
                "to": {
                    "type": "object",
                    "required": [
                        "id"
                    ],
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.Identity": {
            "type": "object",
            "required": [
                "kind",
                "name"
            ],
            "properties": {
                "application": {
                    "type": "integer"
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "encrypted": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "settings": {
                    "type": "string"
                },
                "updateUser": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "api.Import": {
            "type": "object",
            "additionalProperties": true
        },
        "api.ImportSummary": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "importStatus": {
                    "type": "string"
                },
                "importTime": {
                    "type": "string"
                },
                "invalidCount": {
                    "type": "integer"
                },
                "updateUser": {
                    "type": "string"
                },
                "validCount": {
                    "type": "integer"
                }
            }
        },
        "api.JobFunction": {
            "type": "object",
            "required": [
                "role"
            ],
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "stakeholders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Stakeholder"
                    }
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.Proxy": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "identity": {
                    "type": "integer"
                },
                "kind": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.Repository": {
            "type": "object",
            "properties": {
                "application": {
                    "type": "integer"
                },
                "branch": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "kind": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "updateUser": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "api.Review": {
            "type": "object",
            "required": [
                "application"
            ],
            "properties": {
                "application": {
                    "type": "object",
                    "required": [
                        "id"
                    ],
                    "properties": {
                        "id": {
                            "type": "integer"
                        }
                    }
                },
                "businessCriticality": {
                    "type": "integer"
                },
                "comments": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "effortEstimate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "proposedAction": {
                    "type": "string"
                },
                "updateUser": {
                    "type": "string"
                },
                "workPriority": {
                    "type": "integer"
                }
            }
        },
        "api.Stakeholder": {
            "type": "object",
            "required": [
                "displayName",
                "email"
            ],
            "properties": {
                "businessServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.BusinessService"
                    }
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "jobFunction": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "role": {
                            "type": "string"
                        }
                    }
                },
                "stakeholderGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.StakeholderGroup"
                    }
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.StakeholderGroup": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "stakeholders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Stakeholder"
                    }
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.Tag": {
            "type": "object",
            "required": [
                "name",
                "tagType"
            ],
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "tagType": {
                    "type": "object",
                    "required": [
                        "id"
                    ],
                    "properties": {
                        "colour": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.TagType": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "colour": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "rank": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Tag"
                    }
                },
                "updateUser": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.Task": {
            "type": "object",
            "required": [
                "addon",
                "name"
            ],
            "properties": {
                "addon": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "data": {
                    "type": "object"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "isolated": {
                    "type": "boolean"
                },
                "job": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "report": {
                    "$ref": "#/definitions/api.TaskReport"
                },
                "started": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "terminated": {
                    "type": "string"
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.TaskReport": {
            "type": "object",
            "properties": {
                "activity": {
                    "type": "string"
                },
                "completed": {
                    "type": "integer"
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "task": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "model.Application": {
            "type": "object",
            "properties": {
                "businessService": {
                    "$ref": "#/definitions/model.BusinessService"
                },
                "businessServiceID": {
                    "type": "integer"
                },
                "comments": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Identity"
                    }
                },
                "name": {
                    "type": "string"
                },
                "review": {
                    "$ref": "#/definitions/model.Review"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Tag"
                    }
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "model.BusinessService": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/model.Stakeholder"
                },
                "ownerID": {
                    "type": "integer"
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "model.Identity": {
            "type": "object",
            "properties": {
                "applicationID": {
                    "type": "integer"
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "encrypted": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "settings": {
                    "type": "string"
                },
                "updateUser": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "model.JobFunction": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "stakeholders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Stakeholder"
                    }
                },
                "updateUser": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.Review": {
            "type": "object",
            "properties": {
                "application": {
                    "$ref": "#/definitions/model.Application"
                },
                "applicationID": {
                    "type": "integer"
                },
                "businessCriticality": {
                    "type": "integer"
                },
                "comments": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "effortEstimate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "proposedAction": {
                    "type": "string"
                },
                "updateUser": {
                    "type": "string"
                },
                "workPriority": {
                    "type": "integer"
                }
            }
        },
        "model.Stakeholder": {
            "type": "object",
            "properties": {
                "businessServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.BusinessService"
                    }
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.StakeholderGroup"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "jobFunction": {
                    "$ref": "#/definitions/model.JobFunction"
                },
                "jobFunctionID": {
                    "type": "integer"
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "model.StakeholderGroup": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "stakeholders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Stakeholder"
                    }
                },
                "updateUser": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.Tag": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "tagType": {
                    "$ref": "#/definitions/model.TagType"
                },
                "tagTypeID": {
                    "type": "integer"
                },
                "updateUser": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.TagType": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "rank": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Tag"
                    }
                },
                "updateUser": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
